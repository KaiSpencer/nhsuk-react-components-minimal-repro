"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireDefault(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _icons = require("../../icons");
var _excluded = ["mobileOnly", "className", "children", "asElement"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var NavItem = function NavItem(_ref) {
  var mobileOnly = _ref.mobileOnly,
    className = _ref.className,
    children = _ref.children,
    _ref$asElement = _ref.asElement,
    Component = _ref$asElement === void 0 ? 'a' : _ref$asElement,
    rest = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/_react["default"].createElement("li", {
    className: (0, _classnames["default"])('nhsuk-header__navigation-item', {
      'nhsuk-header__navigation-item--for-mobile': mobileOnly
    }, className)
  }, /*#__PURE__*/_react["default"].createElement(Component, _extends({
    className: "nhsuk-header__navigation-link"
  }, rest), children, /*#__PURE__*/_react["default"].createElement(_icons.ChevronRight, null)));
};
var _default = NavItem;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jbGFzc25hbWVzIiwiX2ljb25zIiwiX2V4Y2x1ZGVkIiwib2JqIiwiX19lc01vZHVsZSIsIl9leHRlbmRzIiwiT2JqZWN0IiwiYXNzaWduIiwiYmluZCIsInRhcmdldCIsImkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJhcHBseSIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllcyIsImV4Y2x1ZGVkIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJzb3VyY2VTeW1ib2xLZXlzIiwiaW5kZXhPZiIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwic291cmNlS2V5cyIsImtleXMiLCJOYXZJdGVtIiwiX3JlZiIsIm1vYmlsZU9ubHkiLCJjbGFzc05hbWUiLCJjaGlsZHJlbiIsIl9yZWYkYXNFbGVtZW50IiwiYXNFbGVtZW50IiwiQ29tcG9uZW50IiwicmVzdCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWVzIiwiQ2hldnJvblJpZ2h0IiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaGVhZGVyL2NvbXBvbmVudHMvTmF2SXRlbS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHsgQ2hldnJvblJpZ2h0IGFzIENoZXZyb25SaWdodEljb24gfSBmcm9tICcuLi8uLi9pY29ucyc7XG5pbXBvcnQgdHlwZSB7IEFzRWxlbWVudExpbmsgfSBmcm9tICcuLi8uLi8uLi91dGlsL3R5cGVzL0xpbmtUeXBlcyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmF2SXRlbVByb3BzIGV4dGVuZHMgQXNFbGVtZW50TGluazxIVE1MQW5jaG9yRWxlbWVudD4ge1xuICBtb2JpbGVPbmx5PzogYm9vbGVhbjtcbn1cblxuY29uc3QgTmF2SXRlbTogUmVhY3QuRkM8TmF2SXRlbVByb3BzPiA9ICh7XG4gIG1vYmlsZU9ubHksXG4gIGNsYXNzTmFtZSxcbiAgY2hpbGRyZW4sXG4gIGFzRWxlbWVudDogQ29tcG9uZW50ID0gJ2EnLFxuICAuLi5yZXN0XG59KSA9PiAoXG4gIDxsaVxuICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhcbiAgICAgICduaHN1ay1oZWFkZXJfX25hdmlnYXRpb24taXRlbScsXG4gICAgICB7ICduaHN1ay1oZWFkZXJfX25hdmlnYXRpb24taXRlbS0tZm9yLW1vYmlsZSc6IG1vYmlsZU9ubHkgfSxcbiAgICAgIGNsYXNzTmFtZSxcbiAgICApfVxuICA+XG4gICAgPENvbXBvbmVudCBjbGFzc05hbWU9XCJuaHN1ay1oZWFkZXJfX25hdmlnYXRpb24tbGlua1wiIHsuLi5yZXN0fT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDxDaGV2cm9uUmlnaHRJY29uIC8+XG4gICAgPC9Db21wb25lbnQ+XG4gIDwvbGk+XG4pO1xuXG5leHBvcnQgZGVmYXVsdCBOYXZJdGVtO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxXQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxNQUFBLEdBQUFGLE9BQUE7QUFBK0QsSUFBQUcsU0FBQTtBQUFBLFNBQUFKLHVCQUFBSyxHQUFBLFdBQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUEsZ0JBQUFBLEdBQUE7QUFBQSxTQUFBRSxTQUFBLElBQUFBLFFBQUEsR0FBQUMsTUFBQSxDQUFBQyxNQUFBLEdBQUFELE1BQUEsQ0FBQUMsTUFBQSxDQUFBQyxJQUFBLGVBQUFDLE1BQUEsYUFBQUMsQ0FBQSxNQUFBQSxDQUFB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