"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireDefault(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _HeadingLevel = _interopRequireDefault(require("../../../util/HeadingLevel"));
var _excluded = ["className", "heading", "headingProps", "children"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var TablePanel = function TablePanel(_ref) {
  var className = _ref.className,
    heading = _ref.heading,
    headingProps = _ref.headingProps,
    children = _ref.children,
    rest = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/_react["default"].createElement("div", _extends({
    className: (0, _classnames["default"])('nhsuk-table__panel-with-heading-tab', className)
  }, rest), heading && /*#__PURE__*/_react["default"].createElement(_HeadingLevel["default"], _extends({
    headingLevel: "h3"
  }, headingProps, {
    className: (0, _classnames["default"])('nhsuk-table__heading-tab', headingProps === null || headingProps === void 0 ? void 0 : headingProps.className)
  }), heading), children);
};
var _default = TablePanel;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jbGFzc25hbWVzIiwiX0hlYWRpbmdMZXZlbCIsIl9leGNsdWRlZCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJfZXh0ZW5kcyIsIk9iamVjdCIsImFzc2lnbiIsImJpbmQiLCJ0YXJnZXQiLCJpIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwic291cmNlIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiYXBwbHkiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJleGNsdWRlZCIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwic291cmNlU3ltYm9sS2V5cyIsImluZGV4T2YiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInNvdXJjZUtleXMiLCJrZXlzIiwiVGFibGVQYW5lbCIsIl9yZWYiLCJjbGFzc05hbWUiLCJoZWFkaW5nIiwiaGVhZGluZ1Byb3BzIiwiY2hpbGRyZW4iLCJyZXN0IiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZXMiLCJoZWFkaW5nTGV2ZWwiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy90YWJsZS9jb21wb25lbnRzL1RhYmxlUGFuZWwudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnRQcm9wcywgSFRNTFByb3BzIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgSGVhZGluZ0xldmVsIGZyb20gJy4uLy4uLy4uL3V0aWwvSGVhZGluZ0xldmVsJztcblxuZXhwb3J0IGludGVyZmFjZSBUYWJsZVBhbmVsUHJvcHMgZXh0ZW5kcyBIVE1MUHJvcHM8SFRNTERpdkVsZW1lbnQ+IHtcbiAgaGVhZGluZz86IHN0cmluZztcbiAgaGVhZGluZ1Byb3BzPzogQ29tcG9uZW50UHJvcHM8dHlwZW9mIEhlYWRpbmdMZXZlbD47XG59XG5cbmNvbnN0IFRhYmxlUGFuZWw6IFJlYWN0LkZDPFRhYmxlUGFuZWxQcm9wcz4gPSAoe1xuICBjbGFzc05hbWUsXG4gIGhlYWRpbmcsXG4gIGhlYWRpbmdQcm9wcyxcbiAgY2hpbGRyZW4sXG4gIC4uLnJlc3Rcbn0pID0+IChcbiAgPGRpdiBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ25oc3VrLXRhYmxlX19wYW5lbC13aXRoLWhlYWRpbmctdGFiJywgY2xhc3NOYW1lKX0gey4uLnJlc3R9PlxuICAgIHtoZWFkaW5nICYmIChcbiAgICAgIDxIZWFkaW5nTGV2ZWxcbiAgICAgICAgaGVhZGluZ0xldmVsPVwiaDNcIlxuICAgICAgICB7Li4uaGVhZGluZ1Byb3BzfVxuICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ25oc3VrLXRhYmxlX19oZWFkaW5nLXRhYicsIGhlYWRpbmdQcm9wcz8uY2xhc3NOYW1lKX1cbiAgICAgID5cbiAgICAgICAge2hlYWRpbmd9XG4gICAgICA8L0hlYWRpbmdMZXZlbD5cbiAgICApfVxuICAgIHtjaGlsZHJlbn1cbiAgPC9kaXY+XG4pO1xuXG5leHBvcnQgZGVmYXVsdCBUYWJsZVBhbmVsO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxXQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxhQUFBLEdBQUFILHNCQUFBLENBQUFDLE9BQUE7QUFBc0QsSUFBQUcsU0FBQTtBQUFBLFNBQUFKLHVCQUFBSyxHQUFBLFdBQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUEsZ0JBQUFBLEdBQUE7QUFBQSxTQUFBRSxTQUFBLElBQUFBLFFBQUEsR0FBQUMsTUFBQSxDQUFBQyxNQUFBLEdBQUFELE1BQUEsQ0FBQUMsTUFBQSxDQUFBQyxJQUFBLGVBQUFD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