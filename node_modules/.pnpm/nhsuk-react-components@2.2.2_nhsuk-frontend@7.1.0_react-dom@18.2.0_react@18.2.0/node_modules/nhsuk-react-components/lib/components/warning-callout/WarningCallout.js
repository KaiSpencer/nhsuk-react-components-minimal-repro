"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireDefault(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _HeadingLevel = _interopRequireDefault(require("../../util/HeadingLevel"));
var _excluded = ["className", "visuallyHiddenText", "children"],
  _excluded2 = ["className"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var WarningCalloutLabel = function WarningCalloutLabel(_ref) {
  var className = _ref.className,
    visuallyHiddenText = _ref.visuallyHiddenText,
    children = _ref.children,
    rest = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/_react["default"].createElement(_HeadingLevel["default"], _extends({
    className: (0, _classnames["default"])('nhsuk-warning-callout__label', className)
  }, rest), /*#__PURE__*/_react["default"].createElement("span", {
    role: "text"
  }, visuallyHiddenText && /*#__PURE__*/_react["default"].createElement("span", {
    className: "nhsuk-u-visually-hidden"
  }, visuallyHiddenText), children));
};
WarningCalloutLabel.defaultProps = {
  visuallyHiddenText: 'Important: '
};
var WarningCallout = function WarningCallout(_ref2) {
  var className = _ref2.className,
    rest = _objectWithoutProperties(_ref2, _excluded2);
  return /*#__PURE__*/_react["default"].createElement("div", _extends({
    className: (0, _classnames["default"])('nhsuk-warning-callout', className)
  }, rest));
};
WarningCallout.Label = WarningCalloutLabel;
var _default = WarningCallout;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jbGFzc25hbWVzIiwiX0hlYWRpbmdMZXZlbCIsIl9leGNsdWRlZCIsIl9leGNsdWRlZDIiLCJvYmoiLCJfX2VzTW9kdWxlIiwiX2V4dGVuZHMiLCJPYmplY3QiLCJhc3NpZ24iLCJiaW5kIiwidGFyZ2V0IiwiaSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImFwcGx5IiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwiZXhjbHVkZWQiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSIsImdldE93blByb3BlcnR5U3ltYm9scyIsInNvdXJjZVN5bWJvbEtleXMiLCJpbmRleE9mIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJzb3VyY2VLZXlzIiwia2V5cyIsIldhcm5pbmdDYWxsb3V0TGFiZWwiLCJfcmVmIiwiY2xhc3NOYW1lIiwidmlzdWFsbHlIaWRkZW5UZXh0IiwiY2hpbGRyZW4iLCJyZXN0IiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZXMiLCJyb2xlIiwiZGVmYXVsdFByb3BzIiwiV2FybmluZ0NhbGxvdXQiLCJfcmVmMiIsIkxhYmVsIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvd2FybmluZy1jYWxsb3V0L1dhcm5pbmdDYWxsb3V0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgSFRNTFByb3BzIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgSGVhZGluZ0xldmVsLCB7IEhlYWRpbmdMZXZlbFR5cGUgfSBmcm9tICcuLi8uLi91dGlsL0hlYWRpbmdMZXZlbCc7XG5cbmludGVyZmFjZSBXYXJuaW5nQ2FsbG91dExhYmVsUHJvcHMgZXh0ZW5kcyBIVE1MUHJvcHM8SFRNTEhlYWRpbmdFbGVtZW50PiB7XG4gIGhlYWRpbmdMZXZlbD86IEhlYWRpbmdMZXZlbFR5cGU7XG4gIHZpc3VhbGx5SGlkZGVuVGV4dD86IHN0cmluZyB8IGZhbHNlO1xufVxuXG5jb25zdCBXYXJuaW5nQ2FsbG91dExhYmVsOiBSZWFjdC5GQzxXYXJuaW5nQ2FsbG91dExhYmVsUHJvcHM+ID0gKHtcbiAgY2xhc3NOYW1lLFxuICB2aXN1YWxseUhpZGRlblRleHQsXG4gIGNoaWxkcmVuLFxuICAuLi5yZXN0XG59KSA9PiAoXG4gIDxIZWFkaW5nTGV2ZWwgY2xhc3NOYW1lPXtjbGFzc05hbWVzKCduaHN1ay13YXJuaW5nLWNhbGxvdXRfX2xhYmVsJywgY2xhc3NOYW1lKX0gey4uLnJlc3R9PlxuICAgIHsvKiBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUganN4LWExMXkvYXJpYS1yb2xlICovfVxuICAgIDxzcGFuIHJvbGU9XCJ0ZXh0XCI+XG4gICAgICB7dmlzdWFsbHlIaWRkZW5UZXh0ICYmIDxzcGFuIGNsYXNzTmFtZT1cIm5oc3VrLXUtdmlzdWFsbHktaGlkZGVuXCI+e3Zpc3VhbGx5SGlkZGVuVGV4dH08L3NwYW4+fVxuICAgICAge2NoaWxkcmVufVxuICAgIDwvc3Bhbj5cbiAgPC9IZWFkaW5nTGV2ZWw+XG4pO1xuXG5XYXJuaW5nQ2FsbG91dExhYmVsLmRlZmF1bHRQcm9wcyA9IHtcbiAgdmlzdWFsbHlIaWRkZW5UZXh0OiAnSW1wb3J0YW50OiAnLFxufTtcblxuaW50ZXJmYWNlIElXYXJuaW5nQ2FsbG91dCBleHRlbmRzIFJlYWN0LkZDPEhUTUxQcm9wczxIVE1MRGl2RWxlbWVudD4+IHtcbiAgTGFiZWw6IHR5cGVvZiBXYXJuaW5nQ2FsbG91dExhYmVsO1xufVxuXG5jb25zdCBXYXJuaW5nQ2FsbG91dDogSVdhcm5pbmdDYWxsb3V0ID0gKHsgY2xhc3NOYW1lLCAuLi5yZXN0IH0pID0+IChcbiAgPGRpdiBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ25oc3VrLXdhcm5pbmctY2FsbG91dCcsIGNsYXNzTmFtZSl9IHsuLi5yZXN0fSAvPlxuKTtcblxuV2FybmluZ0NhbGxvdXQuTGFiZWwgPSBXYXJuaW5nQ2FsbG91dExhYmVsO1xuXG5leHBvcnQgZGVmYXVsdCBXYXJuaW5nQ2FsbG91dDtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsV0FBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUUsYUFBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQXlFLElBQUFHLFNBQUE7RUFBQUMsVUFBQTtBQUFBLFNBQUFMLHVCQUFBTSxHQUFBLFdBQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUEsZ0JBQUFBLEdBQUE7QUFBQSxTQUFBRSxTQUFBLElBQUFBLFFBQUEsR0FBQUMsTUFBQSxDQUFBQyxNQUFBLEdBQUFELE1BQUEsQ0FBQUMsTUFBQSxDQUFBQyxJQUFBLGVBQUFDLE1BQUEsYUFBQUMsQ0FBQSxNQUFBQSxDQUFBLEdBQUFDLFNBQUEsQ0FBQUMsTUFBQSxFQUFBRixDQUFBLFVBQUFHLE1BQUEsR0FBQUYsU0FBQSxDQUFBRCxDQUFBLFlBQUFJLEdBQUEsSUFBQUQsTUFBQSxRQUFBUCxNQUFBLENBQUFTLFNBQUEsQ0FBQUMsY0FBQSxDQUFBQyxJQUFBLENBQUFKLE1BQUEsRUFBQUMsR0FBQSxLQUFBTCxNQUFBLENBQUFLLEdBQUEsSUFBQUQsTUFBQSxDQUFBQyxHQUFBLGdCQUFBTCxNQUFBLFlBQUFKLFFBQUEsQ0FBQWEsS0FBQSxPQUFBUCxTQUFBO0FBQUEsU0FBQVEseUJBQUFOLE1BQUEsRUFBQU8sUUFBQSxRQUFBUCxNQUFBLHlCQUFBSixNQUFBLEdBQUFZLDZCQUFBLENBQUFSLE1BQUEsRUFBQU8sUUFBQSxPQUFBTixHQUFBLEVBQUFKLENBQUEsTUFBQUosTUFBQSxDQUFBZ0IscUJBQUEsUUFBQUMsZ0JBQUEsR0FBQWpCLE1BQUEsQ0FBQWdCLHFCQUFBLENBQUFULE1BQUEsUUFBQUgsQ0FBQSxNQUFBQSxDQUFBLEdBQUFhLGdCQUFBLENBQUFYLE1BQUEsRUFBQUYsQ0FBQSxNQUFBSSxHQUFBLEdBQUFTLGdCQUFBLENBQUFiLENBQUEsT0FBQVUsUUFBQSxDQUFBSSxPQUFBLENBQUFWLEdBQUEsdUJBQUFSLE1BQUEsQ0FBQVMsU0FBQSxDQUFBVSxvQkFBQSxDQUFBUixJQUFBLENBQUFKLE1BQUEsRUFBQUMsR0FBQSxhQUFBTCxNQUFBLENBQUFLLEdBQUEsSUFBQUQsTUFBQSxDQUFBQyxHQUFBLGNBQUFMLE1BQUE7QUFBQSxTQUFBWSw4QkFBQVIsTUFBQSxFQUFBTyxRQUFBLFFBQUFQLE1BQUEseUJBQUFKLE1BQUEsV0FBQWlCLFVBQUEsR0FBQXBCLE1BQUEsQ0FBQXFCLElBQUEsQ0FBQWQsTUFBQSxPQUFBQyxHQUFBLEVBQUFKLENBQUEsT0FBQUEsQ0FBQSxNQUFBQSxDQUFBLEdBQUFnQixVQUFBLENBQUFkLE1BQUEsRUFBQUYsQ0FBQSxNQUFBSSxHQUFBLEdBQUFZLFVBQUEsQ0FBQWhCLENBQUEsT0FBQVUsUUFBQSxDQUFBSSxPQUFBLENBQUFWLEdBQUEsa0JBQUFMLE1BQUEsQ0FBQUssR0FBQSxJQUFBRCxNQUFBLENBQUFDLEdBQUEsWUFBQUwsTUFBQTtBQU96RSxJQUFNbUIsbUJBQXVELEdBQUcsU0FBMURBLG1CQUF1REEsQ0FBQUMsSUFBQTtFQUFBLElBQzNEQyxTQUFTLEdBQUFELElBQUEsQ0FBVEMsU0FBUztJQUNUQyxrQkFBa0IsR0FBQUYsSUFBQSxDQUFsQkUsa0JBQWtCO0lBQ2xCQyxRQUFRLEdBQUFILElBQUEsQ0FBUkcsUUFBUTtJQUNMQyxJQUFJLEdBQUFkLHdCQUFBLENBQUFVLElBQUEsRUFBQTVCLFNBQUE7RUFBQSxvQkFFUEwsTUFBQSxZQUFBc0MsYUFBQSxDQUFDbEMsYUFBQSxXQUFZLEVBQUFLLFFBQUE7SUFBQ3lCLFNBQVMsRUFBRSxJQUFBSyxzQkFBVSxFQUFDLDhCQUE4QixFQUFFTCxTQUFTO0VBQUUsR0FBS0csSUFBSSxnQkFFdEZyQyxNQUFBLFlBQUFzQyxhQUFBO0lBQU1FLElBQUksRUFBQztFQUFNLEdBQ2RMLGtCQUFrQixpQkFBSW5DLE1BQUEsWUFBQXNDLGFBQUE7SUFBTUosU0FBUyxFQUFDO0VBQXlCLEdBQUVDLGtCQUFrQixDQUFRLEVBQzNGQyxRQUFRLENBQ0osQ0FDTTtBQUFBLENBQ2hCO0FBRURKLG1CQUFtQixDQUFDUyxZQUFZLEdBQUc7RUFDakNOLGtCQUFrQixFQUFFO0FBQ3RCLENBQUM7QUFNRCxJQUFNTyxjQUErQixHQUFHLFNBQWxDQSxjQUErQkEsQ0FBQUMsS0FBQTtFQUFBLElBQU1ULFNBQVMsR0FBQVMsS0FBQSxDQUFUVCxTQUFTO0lBQUtHLElBQUksR0FBQWQsd0JBQUEsQ0FBQW9CLEtBQUEsRUFBQXJDLFVBQUE7RUFBQSxvQkFDM0ROLE1BQUEsWUFBQXNDLGFBQUEsUUFBQTdCLFFBQUE7SUFBS3lCLFNBQVMsRUFBRSxJQUFBSyxzQkFBVSxFQUFDLHVCQUF1QixFQUFFTCxTQUFTO0VBQUUsR0FBS0csSUFBSSxFQUFJO0FBQUEsQ0FDN0U7QUFFREssY0FBYyxDQUFDRSxLQUFLLEdBQUdaLG1CQUFtQjtBQUFDLElBQUFhLFFBQUEsR0FFNUJILGNBQWM7QUFBQUksT0FBQSxjQUFBRCxRQUFBIn0=