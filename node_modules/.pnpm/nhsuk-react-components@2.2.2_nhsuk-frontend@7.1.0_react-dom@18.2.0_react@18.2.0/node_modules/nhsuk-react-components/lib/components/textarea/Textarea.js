"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireDefault(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _FormGroup = _interopRequireDefault(require("../../util/FormGroup"));
var _excluded = ["className", "error", "textareaRef"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var Textarea = function Textarea(props) {
  return /*#__PURE__*/_react["default"].createElement(_FormGroup["default"], _extends({
    inputType: "textarea"
  }, props), function (_ref) {
    var className = _ref.className,
      error = _ref.error,
      textareaRef = _ref.textareaRef,
      rest = _objectWithoutProperties(_ref, _excluded);
    return /*#__PURE__*/_react["default"].createElement("textarea", _extends({
      className: (0, _classnames["default"])('nhsuk-textarea', {
        'nhsuk-textarea--error': error
      }, className),
      ref: textareaRef
    }, rest));
  });
};
var _default = Textarea;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jbGFzc25hbWVzIiwiX0Zvcm1Hcm91cCIsIl9leGNsdWRlZCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJfZXh0ZW5kcyIsIk9iamVjdCIsImFzc2lnbiIsImJpbmQiLCJ0YXJnZXQiLCJpIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwic291cmNlIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiYXBwbHkiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJleGNsdWRlZCIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwic291cmNlU3ltYm9sS2V5cyIsImluZGV4T2YiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInNvdXJjZUtleXMiLCJrZXlzIiwiVGV4dGFyZWEiLCJwcm9wcyIsImNyZWF0ZUVsZW1lbnQiLCJpbnB1dFR5cGUiLCJfcmVmIiwiY2xhc3NOYW1lIiwiZXJyb3IiLCJ0ZXh0YXJlYVJlZiIsInJlc3QiLCJjbGFzc05hbWVzIiwicmVmIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvdGV4dGFyZWEvVGV4dGFyZWEudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBIVE1MUHJvcHMsIE11dGFibGVSZWZPYmplY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCB7IEZvcm1FbGVtZW50UHJvcHMgfSBmcm9tICcuLi8uLi91dGlsL3R5cGVzL0Zvcm1UeXBlcyc7XG5pbXBvcnQgRm9ybUdyb3VwIGZyb20gJy4uLy4uL3V0aWwvRm9ybUdyb3VwJztcblxudHlwZSBUZXh0YXJlYVByb3BzID0gSFRNTFByb3BzPEhUTUxUZXh0QXJlYUVsZW1lbnQ+ICZcbiAgRm9ybUVsZW1lbnRQcm9wcyAmIHsgdGV4dGFyZWFSZWY/OiBNdXRhYmxlUmVmT2JqZWN0PEhUTUxUZXh0QXJlYUVsZW1lbnQgfCBudWxsPiB9O1xuXG5jb25zdCBUZXh0YXJlYTogUmVhY3QuRkM8VGV4dGFyZWFQcm9wcz4gPSAocHJvcHMpID0+IChcbiAgPEZvcm1Hcm91cDxUZXh0YXJlYVByb3BzPiBpbnB1dFR5cGU9XCJ0ZXh0YXJlYVwiIHsuLi5wcm9wc30+XG4gICAgeyh7IGNsYXNzTmFtZSwgZXJyb3IsIHRleHRhcmVhUmVmLCAuLi5yZXN0IH0pID0+IChcbiAgICAgIDx0ZXh0YXJlYVxuICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ25oc3VrLXRleHRhcmVhJywgeyAnbmhzdWstdGV4dGFyZWEtLWVycm9yJzogZXJyb3IgfSwgY2xhc3NOYW1lKX1cbiAgICAgICAgcmVmPXt0ZXh0YXJlYVJlZn1cbiAgICAgICAgey4uLnJlc3R9XG4gICAgICAvPlxuICAgICl9XG4gIDwvRm9ybUdyb3VwPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgVGV4dGFyZWE7XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFdBQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUVBLElBQUFFLFVBQUEsR0FBQUgsc0JBQUEsQ0FBQUMsT0FBQTtBQUE2QyxJQUFBRyxTQUFBO0FBQUEsU0FBQUosdUJBQUFLLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxnQkFBQUEsR0FBQTtBQUFBLFNBQUFFLFNBQUEsSUFBQUEsUUFBQSxHQUFBQyxNQUFBLENBQUFDLE1BQUEsR0FBQUQsTUFBQSxDQUFBQyxNQUFBLENBQUFDLElBQUEsZUFBQUMsTUFBQSxhQUFBQyxDQUFBLE1BQUFBLENBQUEsR0FBQUMsU0FBQSxDQUFBQyxNQUFBLEVBQUFGLENBQUEsVUFBQUcsTUFBQSxHQUFBRixTQUFBLENBQUFELENBQUEsWUFBQUksR0FBQSxJQUFBRCxNQUFBLFFBQUFQLE1BQUEsQ0FBQVMsU0FBQSxDQUFBQyxjQUFBLENBQUFDLElBQUEsQ0FBQUosTUFBQSxFQUFBQyxHQUFBLEtBQUFMLE1BQUEsQ0FBQUssR0FBQSxJQUFBRCxNQUFBLENBQUFDLEdBQUEsZ0JBQUFMLE1BQUEsWUFBQUosUUFBQSxDQUFBYSxLQUFBLE9BQUFQLFNBQUE7QUFBQSxTQUFBUSx5QkFBQU4sTUFBQSxFQUFBTyxRQUFBLFFBQUFQLE1BQUEseUJBQUFKLE1BQUEsR0FBQVksNkJBQUEsQ0FBQVIsTUFBQSxFQUFBTyxRQUFBLE9BQUFOLEdBQUEsRUFBQUosQ0FBQSxNQUFBSixNQUFBLENBQUFnQixxQkFBQSxRQUFBQyxnQkFBQSxHQUFBakIsTUFBQSxDQUFBZ0IscUJBQUEsQ0FBQVQsTUFBQSxRQUFBSCxDQUFBLE1BQUFBLENBQUEsR0FBQWEsZ0JBQUEsQ0FBQVgsTUFBQSxFQUFBRixDQUFBLE1BQUFJLEdBQUEsR0FBQVMsZ0JBQUEsQ0FBQWIsQ0FBQSxPQUFBVSxRQUFBLENBQUFJLE9BQUEsQ0FBQVYsR0FBQSx1QkFBQVIsTUFBQSxDQUFBUyxTQUFBLENBQUFVLG9CQUFBLENBQUFSLElBQUEsQ0FBQUosTUFBQSxFQUFBQyxHQUFBLGFBQUFMLE1BQUEsQ0FBQUssR0FBQSxJQUFBRCxNQUFBLENBQUFDLEdBQUEsY0FBQUwsTUFBQTtBQUFBLFNBQUFZLDhCQUFBUixNQUFBLEVBQUFPLFFBQUEsUUFBQVAsTUFBQSx5QkFBQUosTUFBQSxXQUFBaUIsVUFBQSxHQUFBcEIsTUFBQSxDQUFBcUIsSUFBQSxDQUFBZCxNQUFBLE9BQUFDLEdBQUEsRUFBQUosQ0FBQSxPQUFBQSxDQUFBLE1BQUFBLENBQUEsR0FBQWdCLFVBQUEsQ0FBQWQsTUFBQSxFQUFBRixDQUFBLE1BQUFJLEdBQUEsR0FBQVksVUFBQSxDQUFBaEIsQ0FBQSxPQUFBVSxRQUFBLENBQUFJLE9BQUEsQ0FBQVYsR0FBQSxrQkFBQUwsTUFBQSxDQUFBSyxHQUFBLElBQUFELE1BQUEsQ0FBQUMsR0FBQSxZQUFBTCxNQUFBO0FBSzdDLElBQU1tQixRQUFpQyxHQUFHLFNBQXBDQSxRQUFpQ0EsQ0FBSUMsS0FBSztFQUFBLG9CQUM5Q2hDLE1BQUEsWUFBQWlDLGFBQUEsQ0FBQzdCLFVBQUEsV0FBUyxFQUFBSSxRQUFBO0lBQWdCMEIsU0FBUyxFQUFDO0VBQVUsR0FBS0YsS0FBSyxHQUNyRCxVQUFBRyxJQUFBO0lBQUEsSUFBR0MsU0FBUyxHQUFBRCxJQUFBLENBQVRDLFNBQVM7TUFBRUMsS0FBSyxHQUFBRixJQUFBLENBQUxFLEtBQUs7TUFBRUMsV0FBVyxHQUFBSCxJQUFBLENBQVhHLFdBQVc7TUFBS0MsSUFBSSxHQUFBakIsd0JBQUEsQ0FBQWEsSUFBQSxFQUFBOUIsU0FBQTtJQUFBLG9CQUN4Q0wsTUFBQSxZQUFBaUMsYUFBQSxhQUFBekIsUUFBQTtNQUNFNEIsU0FBUyxFQUFFLElBQUFJLHNCQUFVLEVBQUMsZ0JBQWdCLEVBQUU7UUFBRSx1QkFBdUIsRUFBRUg7TUFBTSxDQUFDLEVBQUVELFNBQVMsQ0FBRTtNQUN2RkssR0FBRyxFQUFFSDtJQUFZLEdBQ2JDLElBQUksRUFDUjtFQUFBLENBQ0gsQ0FDUztBQUFBLENBQ2I7QUFBQyxJQUFBRyxRQUFBLEdBRWFYLFFBQVE7QUFBQVksT0FBQSxjQUFBRCxRQUFBIn0=