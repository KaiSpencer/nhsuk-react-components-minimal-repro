"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireDefault(require("react"));
var _excluded = ["headingLevel"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var HeadingLevel = function HeadingLevel(_ref) {
  var _ref$headingLevel = _ref.headingLevel,
    headingLevel = _ref$headingLevel === void 0 ? 'h3' : _ref$headingLevel,
    rest = _objectWithoutProperties(_ref, _excluded);
  switch (headingLevel.toLowerCase()) {
    case 'h1':
      return /*#__PURE__*/_react["default"].createElement("h1", rest);
    case 'h2':
      return /*#__PURE__*/_react["default"].createElement("h2", rest);
    case 'h3':
      return /*#__PURE__*/_react["default"].createElement("h3", rest);
    case 'h4':
      return /*#__PURE__*/_react["default"].createElement("h4", rest);
    case 'h5':
      return /*#__PURE__*/_react["default"].createElement("h5", rest);
    case 'h6':
      return /*#__PURE__*/_react["default"].createElement("h6", rest);
    default:
      console.error("HeadingLevel: Invalid headingLevel prop: ".concat(headingLevel));
      return /*#__PURE__*/_react["default"].createElement("h3", rest);
  }
};
var _default = HeadingLevel;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9leGNsdWRlZCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJzb3VyY2UiLCJleGNsdWRlZCIsInRhcmdldCIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIiwia2V5IiwiaSIsIk9iamVjdCIsImdldE93blByb3BlcnR5U3ltYm9scyIsInNvdXJjZVN5bWJvbEtleXMiLCJsZW5ndGgiLCJpbmRleE9mIiwicHJvdG90eXBlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJjYWxsIiwic291cmNlS2V5cyIsImtleXMiLCJIZWFkaW5nTGV2ZWwiLCJfcmVmIiwiX3JlZiRoZWFkaW5nTGV2ZWwiLCJoZWFkaW5nTGV2ZWwiLCJyZXN0IiwidG9Mb3dlckNhc2UiLCJjcmVhdGVFbGVtZW50IiwiY29uc29sZSIsImVycm9yIiwiY29uY2F0IiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWwvSGVhZGluZ0xldmVsLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgSFRNTFByb3BzIH0gZnJvbSAncmVhY3QnO1xuXG5pbnRlcmZhY2UgSGVhZGluZ0xldmVsUHJvcHMgZXh0ZW5kcyBIVE1MUHJvcHM8SFRNTEhlYWRpbmdFbGVtZW50PiB7XG4gIGhlYWRpbmdMZXZlbD86IEhlYWRpbmdMZXZlbFR5cGU7XG59XG5cbmV4cG9ydCB0eXBlIEhlYWRpbmdMZXZlbFR5cGUgPVxuICB8ICdoMSdcbiAgfCAnaDInXG4gIHwgJ2gzJ1xuICB8ICdoNCdcbiAgfCAnaDUnXG4gIHwgJ2g2J1xuICB8ICdIMSdcbiAgfCAnSDInXG4gIHwgJ0gzJ1xuICB8ICdINCdcbiAgfCAnSDUnXG4gIHwgJ0g2JztcblxuY29uc3QgSGVhZGluZ0xldmVsOiBSZWFjdC5GQzxIZWFkaW5nTGV2ZWxQcm9wcz4gPSAoeyBoZWFkaW5nTGV2ZWw9J2gzJywgLi4ucmVzdCB9KSA9PiB7XG4gIHN3aXRjaCAoaGVhZGluZ0xldmVsLnRvTG93ZXJDYXNlKCkpIHtcbiAgICBjYXNlICdoMSc6XG4gICAgICByZXR1cm4gPGgxIHsuLi5yZXN0fSAvPjtcbiAgICBjYXNlICdoMic6XG4gICAgICByZXR1cm4gPGgyIHsuLi5yZXN0fSAvPjtcbiAgICBjYXNlICdoMyc6XG4gICAgICByZXR1cm4gPGgzIHsuLi5yZXN0fSAvPjtcbiAgICBjYXNlICdoNCc6XG4gICAgICByZXR1cm4gPGg0IHsuLi5yZXN0fSAvPjtcbiAgICBjYXNlICdoNSc6XG4gICAgICByZXR1cm4gPGg1IHsuLi5yZXN0fSAvPjtcbiAgICBjYXNlICdoNic6XG4gICAgICByZXR1cm4gPGg2IHsuLi5yZXN0fSAvPjtcbiAgICBkZWZhdWx0OlxuICAgICAgY29uc29sZS5lcnJvcihgSGVhZGluZ0xldmVsOiBJbnZhbGlkIGhlYWRpbmdMZXZlbCBwcm9wOiAke2hlYWRpbmdMZXZlbH1gKTtcbiAgICAgIHJldHVybiA8aDMgey4uLnJlc3R9IC8+O1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBIZWFkaW5nTGV2ZWw7XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUF5QyxJQUFBQyxTQUFBO0FBQUEsU0FBQUYsdUJBQUFHLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxnQkFBQUEsR0FBQTtBQUFBLFNBQUFFLHlCQUFBQyxNQUFBLEVBQUFDLFFBQUEsUUFBQUQsTUFBQSx5QkFBQUUsTUFBQSxHQUFBQyw2QkFBQSxDQUFBSCxNQUFBLEVBQUFDLFFBQUEsT0FBQUcsR0FBQSxFQUFBQyxDQUFBLE1BQUFDLE1BQUEsQ0FBQUMscUJBQUEsUUFBQUMsZ0JBQUEsR0FBQUYsTUFBQSxDQUFBQyxxQkFBQSxDQUFBUCxNQUFBLFFBQUFLLENBQUEsTUFBQUEsQ0FBQSxHQUFBRyxnQkFBQSxDQUFBQyxNQUFBLEVBQUFKLENBQUEsTUFBQUQsR0FBQSxHQUFBSSxnQkFBQSxDQUFBSCxDQUFBLE9BQUFKLFFBQUEsQ0FBQVMsT0FBQSxDQUFBTixHQUFBLHVCQUFBRSxNQUFBLENBQUFLLFNBQUEsQ0FBQUMsb0JBQUEsQ0FBQUMsSUFBQSxDQUFBYixNQUFBLEVBQUFJLEdBQUEsYUFBQUYsTUFBQSxDQUFBRSxHQUFBLElBQUFKLE1BQUEsQ0FBQUksR0FBQSxjQUFBRixNQUFBO0FBQUEsU0FBQUMsOEJBQUFILE1BQUEsRUFBQUMsUUFBQSxRQUFBRCxNQUFBLHlCQUFBRSxNQUFBLFdBQUFZLFVBQUEsR0FBQVIsTUFBQSxDQUFBUyxJQUFBLENBQUFmLE1BQUEsT0FBQUksR0FBQSxFQUFBQyxDQUFBLE9BQUFBLENBQUEsTUFBQUEsQ0FBQSxHQUFBUyxVQUFBLENBQUFMLE1BQUEsRUFBQUosQ0FBQSxNQUFBRCxHQUFBLEdBQUFVLFVBQUEsQ0FBQVQsQ0FBQSxPQUFBSixRQUFBLENBQUFTLE9BQUEsQ0FBQU4sR0FBQSxrQkFBQUYsTUFBQSxDQUFBRSxHQUFBLElBQUFKLE1BQUEsQ0FBQUksR0FBQSxZQUFBRixNQUFBO0FBb0J6QyxJQUFNYyxZQUF5QyxHQUFHLFNBQTVDQSxZQUF5Q0EsQ0FBQUMsSUFBQSxFQUF1QztFQUFBLElBQUFDLGlCQUFBLEdBQUFELElBQUEsQ0FBakNFLFlBQVk7SUFBWkEsWUFBWSxHQUFBRCxpQkFBQSxjQUFDLElBQUksR0FBQUEsaUJBQUE7SUFBS0UsSUFBSSxHQUFBckIsd0JBQUEsQ0FBQWtCLElBQUEsRUFBQXJCLFNBQUE7RUFDN0UsUUFBUXVCLFlBQVksQ0FBQ0UsV0FBVyxFQUFFO0lBQ2hDLEtBQUssSUFBSTtNQUNQLG9CQUFPNUIsTUFBQSxZQUFBNkIsYUFBQSxPQUFRRixJQUFJLENBQUk7SUFDekIsS0FBSyxJQUFJO01BQ1Asb0JBQU8zQixNQUFBLFlBQUE2QixhQUFBLE9BQVFGLElBQUksQ0FBSTtJQUN6QixLQUFLLElBQUk7TUFDUCxvQkFBTzNCLE1BQUEsWUFBQTZCLGFBQUEsT0FBUUYsSUFBSSxDQUFJO0lBQ3pCLEtBQUssSUFBSTtNQUNQLG9CQUFPM0IsTUFBQSxZQUFBNkIsYUFBQSxPQUFRRixJQUFJLENBQUk7SUFDekIsS0FBSyxJQUFJO01BQ1Asb0JBQU8zQixNQUFBLFlBQUE2QixhQUFBLE9BQVFGLElBQUksQ0FBSTtJQUN6QixLQUFLLElBQUk7TUFDUCxvQkFBTzNCLE1BQUEsWUFBQTZCLGFBQUEsT0FBUUYsSUFBSSxDQUFJO0lBQ3pCO01BQ0VHLE9BQU8sQ0FBQ0MsS0FBSyw2Q0FBQUMsTUFBQSxDQUE2Q04sWUFBWSxFQUFHO01BQ3pFLG9CQUFPMUIsTUFBQSxZQUFBNkIsYUFBQSxPQUFRRixJQUFJLENBQUk7RUFBQztBQUU5QixDQUFDO0FBQUMsSUFBQU0sUUFBQSxHQUVhVixZQUFZO0FBQUFXLE9BQUEsY0FBQUQsUUFBQSJ9