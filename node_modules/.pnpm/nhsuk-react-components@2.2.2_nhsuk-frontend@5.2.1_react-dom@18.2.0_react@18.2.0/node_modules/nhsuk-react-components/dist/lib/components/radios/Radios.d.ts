import React, { HTMLProps, PureComponent } from 'react';
import { FormElementProps } from '../../util/types/FormTypes';
interface RadiosProps extends HTMLProps<HTMLDivElement>, FormElementProps {
    inline?: boolean;
    idPrefix?: string;
}
declare type RadiosState = {
    conditionalRadios: Array<string>;
    selectedRadio: string;
};
declare class Radios extends PureComponent<RadiosProps, RadiosState> {
    private radioCount;
    private radioReferences;
    private radioIds;
    static Divider: React.FC<React.HTMLProps<HTMLDivElement>>;
    static Radio: React.FC<import("./components/Radio").RadioProps>;
    constructor(props: RadiosProps);
    getRadioId: (id: string, reference: string) => string;
    leaseReference: () => string;
    unleaseReference: (reference: string) => void;
    setConditional: (radioReference: string, hasConditional: boolean) => void;
    setSelected: (radioReference: string) => void;
    resetRadioIds: () => void;
    render(): JSX.Element;
}
export default Radios;
