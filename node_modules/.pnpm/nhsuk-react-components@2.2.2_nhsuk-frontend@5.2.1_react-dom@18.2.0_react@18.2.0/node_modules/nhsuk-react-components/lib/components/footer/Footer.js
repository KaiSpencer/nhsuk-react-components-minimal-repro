"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireDefault(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _layout = require("../layout");
var _UseDevWarning = _interopRequireDefault(require("../../util/hooks/UseDevWarning"));
var _warnings = require("../../deprecated/warnings");
var _excluded = ["className", "columns"],
  _excluded2 = ["className"],
  _excluded3 = ["className"],
  _excluded4 = ["className", "children", "visuallyHiddenText"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var FooterList = function FooterList(_ref) {
  var className = _ref.className,
    columns = _ref.columns,
    rest = _objectWithoutProperties(_ref, _excluded);
  (0, _UseDevWarning["default"])(_warnings.NHSUKFrontendV5UpgradeWarnings.FooterColumns, function () {
    return columns;
  });
  return /*#__PURE__*/_react["default"].createElement("ul", _extends({
    className: (0, _classnames["default"])('nhsuk-footer__list', {
      'nhsuk-footer__list--three-columns': columns
    }, className)
  }, rest));
};
var FooterListItem = function FooterListItem(_ref2) {
  var className = _ref2.className,
    rest = _objectWithoutProperties(_ref2, _excluded2);
  return /*#__PURE__*/_react["default"].createElement("li", {
    className: "nhsuk-footer__list-item"
  }, /*#__PURE__*/_react["default"].createElement("a", _extends({
    className: (0, _classnames["default"])('nhsuk-footer__list-item-link', className)
  }, rest)));
};
var FooterCopyright = function FooterCopyright(_ref3) {
  var className = _ref3.className,
    rest = _objectWithoutProperties(_ref3, _excluded3);
  return /*#__PURE__*/_react["default"].createElement("p", _extends({
    className: (0, _classnames["default"])('nhsuk-footer__copyright', className)
  }, rest));
};
var Footer = function Footer(_ref4) {
  var className = _ref4.className,
    children = _ref4.children,
    visuallyHiddenText = _ref4.visuallyHiddenText,
    rest = _objectWithoutProperties(_ref4, _excluded4);
  return /*#__PURE__*/_react["default"].createElement("footer", rest, /*#__PURE__*/_react["default"].createElement("div", {
    className: (0, _classnames["default"])('nhsuk-footer', className)
  }, /*#__PURE__*/_react["default"].createElement(_layout.Container, null, visuallyHiddenText ? /*#__PURE__*/_react["default"].createElement("h2", {
    className: "nhsuk-u-visually-hidden"
  }, visuallyHiddenText) : null, children)));
};
Footer.defaultProps = {
  visuallyHiddenText: 'Support links'
};
Footer.List = FooterList;
Footer.ListItem = FooterListItem;
Footer.Copyright = FooterCopyright;
var _default = Footer;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,