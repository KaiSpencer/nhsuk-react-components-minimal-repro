"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireDefault(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _layout = require("../layout");
var _HeadingLevel = _interopRequireDefault(require("../../util/HeadingLevel"));
var _excluded = ["className"],
  _excluded2 = ["className"],
  _excluded3 = ["className", "children", "imageSrc"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var HeroContent = function HeroContent(_ref) {
  var children = _ref.children,
    hasImage = _ref.hasImage;
  if (!children) {
    return null;
  }
  return /*#__PURE__*/_react["default"].createElement(_layout.Container, {
    className: (0, _classnames["default"])({
      'nhsuk-hero--border': hasImage
    })
  }, /*#__PURE__*/_react["default"].createElement(_layout.Row, null, /*#__PURE__*/_react["default"].createElement(_layout.Col, {
    width: "two-thirds"
  }, hasImage ? /*#__PURE__*/_react["default"].createElement("div", {
    className: "nhsuk-hero-content"
  }, children, /*#__PURE__*/_react["default"].createElement("span", {
    className: "nhsuk-hero__arrow",
    "aria-hidden": "true"
  })) : /*#__PURE__*/_react["default"].createElement("div", {
    className: "nhsuk-hero__wrapper"
  }, children))));
};
var HeroHeading = function HeroHeading(_ref2) {
  var className = _ref2.className,
    rest = _objectWithoutProperties(_ref2, _excluded);
  return /*#__PURE__*/_react["default"].createElement(_HeadingLevel["default"], _extends({
    className: (0, _classnames["default"])('nhsuk-u-margin-bottom-3', className)
  }, rest));
};
HeroHeading.defaultProps = {
  headingLevel: 'h1'
};
var HeroText = function HeroText(_ref3) {
  var className = _ref3.className,
    rest = _objectWithoutProperties(_ref3, _excluded2);
  return /*#__PURE__*/_react["default"].createElement("p", _extends({
    className: (0, _classnames["default"])('nhsuk-body-l nhsuk-u-margin-bottom-0', className)
  }, rest));
};
var Hero = function Hero(_ref4) {
  var className = _ref4.className,
    children = _ref4.children,
    imageSrc = _ref4.imageSrc,
    rest = _objectWithoutProperties(_ref4, _excluded3);
  return /*#__PURE__*/_react["default"].createElement("section", _extends({
    className: (0, _classnames["default"])('nhsuk-hero', {
      'nhsuk-hero--image': imageSrc
    }, {
      'nhsuk-hero--image-description': imageSrc && children
    }, className),
    style: imageSrc ? {
      backgroundImage: "url('".concat(imageSrc, "')")
    } : undefined
  }, rest), imageSrc ? /*#__PURE__*/_react["default"].createElement("div", {
    className: "nhsuk-hero__overlay"
  }, /*#__PURE__*/_react["default"].createElement(HeroContent, {
    hasImage: Boolean(imageSrc)
  }, children)) : /*#__PURE__*/_react["default"].createElement(HeroContent, {
    hasImage: Boolean(imageSrc)
  }, children));
};
Hero.Heading = HeroHeading;
Hero.Text = HeroText;
var _default = Hero;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,