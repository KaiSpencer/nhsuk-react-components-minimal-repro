"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isTableCell = exports.getHeadingsFromChildren = void 0;
var _react = _interopRequireWildcard(require("react"));
var _TableCell = _interopRequireDefault(require("./components/TableCell"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var isTableCell = function isTableCell(child) {
  return /*#__PURE__*/(0, _react.isValidElement)(child) && child.type === _TableCell["default"];
};
exports.isTableCell = isTableCell;
var getHeadingsFromChildren = function getHeadingsFromChildren(children) {
  var headings = [];
  _react["default"].Children.map(children, function (child) {
    if (isTableCell(child)) {
      headings.push(child.props.children.toString());
    }
  });
  return headings;
};
exports.getHeadingsFromChildren = getHeadingsFromChildren;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfVGFibGVDZWxsIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJub2RlSW50ZXJvcCIsIldlYWtNYXAiLCJjYWNoZUJhYmVsSW50ZXJvcCIsImNhY2hlTm9kZUludGVyb3AiLCJfdHlwZW9mIiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJpc1RhYmxlQ2VsbCIsImNoaWxkIiwiaXNWYWxpZEVsZW1lbnQiLCJ0eXBlIiwiVGFibGVDZWxsIiwiZXhwb3J0cyIsImdldEhlYWRpbmdzRnJvbUNoaWxkcmVuIiwiY2hpbGRyZW4iLCJoZWFkaW5ncyIsIlJlYWN0IiwiQ2hpbGRyZW4iLCJtYXAiLCJwdXNoIiwicHJvcHMiLCJ0b1N0cmluZyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3RhYmxlL1RhYmxlSGVscGVycy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgaXNWYWxpZEVsZW1lbnQsIFJlYWN0RWxlbWVudCwgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFRhYmxlQ2VsbCBmcm9tICcuL2NvbXBvbmVudHMvVGFibGVDZWxsJztcblxuZXhwb3J0IGNvbnN0IGlzVGFibGVDZWxsID0gKGNoaWxkOiBSZWFjdE5vZGUpOiBjaGlsZCBpcyBSZWFjdEVsZW1lbnQgPT4ge1xuICByZXR1cm4gaXNWYWxpZEVsZW1lbnQoY2hpbGQpICYmIGNoaWxkLnR5cGUgPT09IFRhYmxlQ2VsbDtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRIZWFkaW5nc0Zyb21DaGlsZHJlbiA9IChjaGlsZHJlbjogUmVhY3ROb2RlKTogc3RyaW5nW10gPT4ge1xuICBjb25zdCBoZWFkaW5nczogc3RyaW5nW10gPSBbXTtcbiAgUmVhY3QuQ2hpbGRyZW4ubWFwKGNoaWxkcmVuLCAoY2hpbGQpID0+IHtcbiAgICBpZiAoaXNUYWJsZUNlbGwoY2hpbGQpKSB7XG4gICAgICBoZWFkaW5ncy5wdXNoKGNoaWxkLnByb3BzLmNoaWxkcmVuLnRvU3RyaW5nKCkpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBoZWFkaW5ncztcbn07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxVQUFBLEdBQUFDLHNCQUFBLENBQUFGLE9BQUE7QUFBK0MsU0FBQUUsdUJBQUFDLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxnQkFBQUEsR0FBQTtBQUFBLFNBQUFFLHlCQUFBQyxXQUFBLGVBQUFDLE9BQUEsa0NBQUFDLGlCQUFBLE9BQUFELE9BQUEsUUFBQUUsZ0JBQUEsT0FBQUYsT0FBQSxZQUFBRix3QkFBQSxZQUFBQSx5QkFBQUMsV0FBQSxXQUFBQSxXQUFBLEdBQUFHLGdCQUFBLEdBQUFELGlCQUFBLEtBQUFGLFdBQUE7QUFBQSxTQUFBUCx3QkFBQUksR0FBQSxFQUFBRyxXQUFBLFNBQUFBLFdBQUEsSUFBQUgsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsV0FBQUQsR0FBQSxRQUFBQSxHQUFBLGFBQUFPLE9BQUEsQ0FBQVAsR0FBQSx5QkFBQUEsR0FBQSx1Q0FBQUEsR0FBQSxVQUFBUSxLQUFBLEdBQUFOLHdCQUFBLENBQUFDLFdBQUEsT0FBQUssS0FBQSxJQUFBQSxLQUFBLENBQUFDLEdBQUEsQ0FBQVQsR0FBQSxZQUFBUSxLQUFBLENBQUFFLEdBQUEsQ0FBQVYsR0FBQSxTQUFBVyxNQUFBLFdBQUFDLHFCQUFBLEdBQUFDLE1BQUEsQ0FBQUMsY0FBQSxJQUFBRCxNQUFBLENBQUFFLHdCQUFBLFdBQUFDLEdBQUEsSUFBQWhCLEdBQUEsUUFBQWdCLEdBQUEsa0JBQUFILE1BQUEsQ0FBQUksU0FBQSxDQUFBQyxjQUFBLENBQUFDLElBQUEsQ0FBQW5CLEdBQUEsRUFBQWdCLEdBQUEsU0FBQUksSUFBQSxHQUFBUixxQkFBQSxHQUFBQyxNQUFBLENBQUFFLHdCQUFBLENBQUFmLEdBQUEsRUFBQWdCLEdBQUEsY0FBQUksSUFBQSxLQUFBQSxJQUFBLENBQUFWLEdBQUEsSUFBQVUsSUFBQSxDQUFBQyxHQUFBLEtBQUFSLE1BQUEsQ0FBQUMsY0FBQSxDQUFBSCxNQUFBLEVBQUFLLEdBQUEsRUFBQUksSUFBQSxZQUFBVCxNQUFBLENBQUFLLEdBQUEsSUFBQWhCLEdBQUEsQ0FBQWdCLEdBQUEsU0FBQUwsTUFBQSxjQUFBWCxHQUFBLE1BQUFRLEtBQUEsSUFBQUEsS0FBQSxDQUFBYSxHQUFBLENBQUFyQixHQUFBLEVBQUFXLE1BQUEsWUFBQUEsTUFBQTtBQUV4QyxJQUFNVyxXQUFXLEdBQUcsU0FBZEEsV0FBV0EsQ0FBSUMsS0FBZ0IsRUFBNEI7RUFDdEUsT0FBTyxpQkFBQUMscUJBQWMsRUFBQ0QsS0FBSyxDQUFDLElBQUlBLEtBQUssQ0FBQ0UsSUFBSSxLQUFLQyxxQkFBUztBQUMxRCxDQUFDO0FBQUNDLE9BQUEsQ0FBQUwsV0FBQSxHQUFBQSxXQUFBO0FBRUssSUFBTU0sdUJBQXVCLEdBQUcsU0FBMUJBLHVCQUF1QkEsQ0FBSUMsUUFBbUIsRUFBZTtFQUN4RSxJQUFNQyxRQUFrQixHQUFHLEVBQUU7RUFDN0JDLGlCQUFLLENBQUNDLFFBQVEsQ0FBQ0MsR0FBRyxDQUFDSixRQUFRLEVBQUUsVUFBQ04sS0FBSyxFQUFLO0lBQ3RDLElBQUlELFdBQVcsQ0FBQ0MsS0FBSyxDQUFDLEVBQUU7TUFDdEJPLFFBQVEsQ0FBQ0ksSUFBSSxDQUFDWCxLQUFLLENBQUNZLEtBQUssQ0FBQ04sUUFBUSxDQUFDTyxRQUFRLEVBQUUsQ0FBQztJQUNoRDtFQUNGLENBQUMsQ0FBQztFQUNGLE9BQU9OLFFBQVE7QUFDakIsQ0FBQztBQUFDSCxPQUFBLENBQUFDLHVCQUFBLEdBQUFBLHVCQUFBIn0=