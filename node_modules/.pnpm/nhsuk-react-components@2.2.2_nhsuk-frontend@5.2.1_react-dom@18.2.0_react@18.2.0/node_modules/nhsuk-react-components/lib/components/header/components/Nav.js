"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireWildcard(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _layout = require("../../layout");
var _icons = require("../../icons");
var _HeaderContext = _interopRequireDefault(require("../HeaderContext"));
var _excluded = ["className", "children", "open"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var Nav = function Nav(_ref) {
  var className = _ref.className,
    children = _ref.children,
    open = _ref.open,
    rest = _objectWithoutProperties(_ref, _excluded);
  var _useContext = (0, _react.useContext)(_HeaderContext["default"]),
    menuOpen = _useContext.menuOpen,
    toggleMenu = _useContext.toggleMenu;
  return /*#__PURE__*/_react["default"].createElement("nav", _extends({
    className: (0, _classnames["default"])('nhsuk-header__navigation', {
      'js-show': open !== undefined ? open : menuOpen
    }, className)
  }, rest), /*#__PURE__*/_react["default"].createElement(_layout.Container, null, /*#__PURE__*/_react["default"].createElement("p", {
    className: "nhsuk-header__navigation-title"
  }, /*#__PURE__*/_react["default"].createElement("span", null, "Menu"), /*#__PURE__*/_react["default"].createElement("button", {
    className: "nhsuk-header__navigation-close",
    type: "button",
    onClick: toggleMenu
  }, /*#__PURE__*/_react["default"].createElement(_icons.Close, null), /*#__PURE__*/_react["default"].createElement("span", {
    className: "nhsuk-u-visually-hidden"
  }, "Close menu"))), /*#__PURE__*/_react["default"].createElement("ul", {
    className: "nhsuk-header__navigation-list"
  }, children)));
};
var _default = Nav;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfY2xhc3NuYW1lcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfbGF5b3V0IiwiX2ljb25zIiwiX0hlYWRlckNvbnRleHQiLCJfZXhjbHVkZWQiLCJvYmoiLCJfX2VzTW9kdWxlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwiX3R5cGVvZiIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJkZXNjIiwic2V0IiwiX2V4dGVuZHMiLCJhc3NpZ24iLCJiaW5kIiwidGFyZ2V0IiwiaSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsImFwcGx5IiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwiZXhjbHVkZWQiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSIsImdldE93blByb3BlcnR5U3ltYm9scyIsInNvdXJjZVN5bWJvbEtleXMiLCJpbmRleE9mIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJzb3VyY2VLZXlzIiwia2V5cyIsIk5hdiIsIl9yZWYiLCJjbGFzc05hbWUiLCJjaGlsZHJlbiIsIm9wZW4iLCJyZXN0IiwiX3VzZUNvbnRleHQiLCJ1c2VDb250ZXh0IiwiSGVhZGVyQ29udGV4dCIsIm1lbnVPcGVuIiwidG9nZ2xlTWVudSIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWVzIiwidW5kZWZpbmVkIiwiQ29udGFpbmVyIiwidHlwZSIsIm9uQ2xpY2siLCJDbG9zZSIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2hlYWRlci9jb21wb25lbnRzL05hdi50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEhUTUxQcm9wcywgdXNlQ29udGV4dCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHsgQ29udGFpbmVyIH0gZnJvbSAnLi4vLi4vbGF5b3V0JztcbmltcG9ydCB7IENsb3NlIGFzIENsb3NlSWNvbiB9IGZyb20gJy4uLy4uL2ljb25zJztcbmltcG9ydCBIZWFkZXJDb250ZXh0LCB7IElIZWFkZXJDb250ZXh0IH0gZnJvbSAnLi4vSGVhZGVyQ29udGV4dCc7XG5cbmNvbnN0IE5hdjogUmVhY3QuRkM8SFRNTFByb3BzPEhUTUxEaXZFbGVtZW50Pj4gPSAoe1xuICBjbGFzc05hbWUsIGNoaWxkcmVuLCBvcGVuLCAuLi5yZXN0XG59KSA9PiB7XG4gIGNvbnN0IHsgbWVudU9wZW4sIHRvZ2dsZU1lbnUgfSA9IHVzZUNvbnRleHQ8SUhlYWRlckNvbnRleHQ+KEhlYWRlckNvbnRleHQpO1xuXG4gIHJldHVybiAoXG4gICAgPG5hdlxuICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKFxuICAgICAgICAnbmhzdWstaGVhZGVyX19uYXZpZ2F0aW9uJyxcbiAgICAgICAgeyAnanMtc2hvdyc6IG9wZW4gIT09IHVuZGVmaW5lZCA/IG9wZW4gOiBtZW51T3BlbiB9LFxuICAgICAgICBjbGFzc05hbWUsXG4gICAgICApfVxuICAgICAgey4uLnJlc3R9XG4gICAgPlxuICAgICAgPENvbnRhaW5lcj5cbiAgICAgICAgPHAgY2xhc3NOYW1lPVwibmhzdWstaGVhZGVyX19uYXZpZ2F0aW9uLXRpdGxlXCI+XG4gICAgICAgICAgPHNwYW4+TWVudTwvc3Bhbj5cbiAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cIm5oc3VrLWhlYWRlcl9fbmF2aWdhdGlvbi1jbG9zZVwiIHR5cGU9XCJidXR0b25cIiBvbkNsaWNrPXt0b2dnbGVNZW51fT5cbiAgICAgICAgICAgIDxDbG9zZUljb24gLz5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm5oc3VrLXUtdmlzdWFsbHktaGlkZGVuXCI+Q2xvc2UgbWVudTwvc3Bhbj5cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPC9wPlxuICAgICAgICA8dWwgY2xhc3NOYW1lPVwibmhzdWstaGVhZGVyX19uYXZpZ2F0aW9uLWxpc3RcIj57Y2hpbGRyZW59PC91bD5cbiAgICAgIDwvQ29udGFpbmVyPlxuICAgIDwvbmF2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgTmF2O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsV0FBQSxHQUFBQyxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUcsT0FBQSxHQUFBSCxPQUFBO0FBQ0EsSUFBQUksTUFBQSxHQUFBSixPQUFBO0FBQ0EsSUFBQUssY0FBQSxHQUFBSCxzQkFBQSxDQUFBRixPQUFBO0FBQWlFLElBQUFNLFNBQUE7QUFBQSxTQUFBSix1QkFBQUssR0FBQSxXQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBLGdCQUFBQSxHQUFBO0FBQUEsU0FBQUUseUJBQUFDLFdBQUEsZUFBQUMsT0FBQSxrQ0FBQUMsaUJBQUEsT0FBQUQsT0FBQSxRQUFBRSxnQkFBQSxPQUFBRixPQUFBLFlBQUFGLHdCQUFBLFlBQUFBLHlCQUFBQyxXQUFBLFdBQUFBLFdBQUEsR0FBQUcsZ0JBQUEsR0FBQUQsaUJBQUEsS0FBQUYsV0FBQTtBQUFBLFNBQUFYLHdCQUFBUSxHQUFBLEVBQUFHLFdBQUEsU0FBQUEsV0FBQSxJQUFBSCxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxXQUFBRCxHQUFBLFFBQUFBLEdBQUEsYUFBQU8sT0FBQSxDQUFBUCxHQUFBLHlCQUFBQSxHQUFBLHVDQUFBQSxHQUFBLFVB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