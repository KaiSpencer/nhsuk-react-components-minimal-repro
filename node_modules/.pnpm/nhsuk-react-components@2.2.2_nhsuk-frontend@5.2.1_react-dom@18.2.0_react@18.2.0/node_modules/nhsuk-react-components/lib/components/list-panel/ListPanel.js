"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireDefault(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _excluded = ["className", "children", "noResults", "label", "labelProps", "backToTop", "backToTopLink", "backToTopButtonText"],
  _excluded2 = ["className"],
  _excluded3 = ["className", "asElement"],
  _excluded4 = ["className", "children"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var Panel = function Panel(_ref) {
  var className = _ref.className,
    children = _ref.children,
    noResults = _ref.noResults,
    label = _ref.label,
    labelProps = _ref.labelProps,
    backToTop = _ref.backToTop,
    backToTopLink = _ref.backToTopLink,
    backToTopButtonText = _ref.backToTopButtonText,
    rest = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/_react["default"].createElement("li", null, /*#__PURE__*/_react["default"].createElement("div", _extends({
    className: (0, _classnames["default"])('nhsuk-list-panel', className)
  }, rest), label ? /*#__PURE__*/_react["default"].createElement("h2", _extends({
    className: "nhsuk-list-panel__label"
  }, labelProps), label) : null, noResults ? /*#__PURE__*/_react["default"].createElement("div", {
    className: (0, _classnames["default"])('nhsuk-list-panel__box', {
      'nhsuk-list-panel__box--with-label': label
    })
  }, /*#__PURE__*/_react["default"].createElement("p", {
    className: "nhsuk-list-panel--results-items__no-results"
  }, children)) : /*#__PURE__*/_react["default"].createElement("ul", {
    className: (0, _classnames["default"])('nhsuk-list-panel__list', {
      'nhsuk-list-panel__list--with-label': label
    })
  }, children), backToTop ? /*#__PURE__*/_react["default"].createElement("div", {
    className: "nhsuk-back-to-top"
  }, /*#__PURE__*/_react["default"].createElement("a", {
    className: "nhsuk-back-to-top__link",
    href: backToTopLink
  }, /*#__PURE__*/_react["default"].createElement("svg", {
    className: "nhsuk-icon nhsuk-icon__arrow-right",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    "aria-hidden": "true"
  }, /*#__PURE__*/_react["default"].createElement("path", {
    d: "M19.6 11.66l-2.73-3A.51.51 0 0 0 16 9v2H5a1 1 0 0 0 0 2h11v2a.5.5 0 0 0 .32.46.39.39 0 0 0 .18 0 .52.52 0 0 0 .37-.16l2.73-3a.5.5 0 0 0 0-.64z"
  })), backToTopButtonText || 'Back to top')) : null));
};
var PanelItem = function PanelItem(_ref2) {
  var className = _ref2.className,
    rest = _objectWithoutProperties(_ref2, _excluded2);
  return /*#__PURE__*/_react["default"].createElement("li", _extends({
    className: (0, _classnames["default"])('nhsuk-list-panel__item', className)
  }, rest));
};
var PanelLinkItem = function PanelLinkItem(_ref3) {
  var className = _ref3.className,
    _ref3$asElement = _ref3.asElement,
    Component = _ref3$asElement === void 0 ? 'a' : _ref3$asElement,
    rest = _objectWithoutProperties(_ref3, _excluded3);
  return /*#__PURE__*/_react["default"].createElement(PanelItem, null, /*#__PURE__*/_react["default"].createElement(Component, _extends({
    className: (0, _classnames["default"])('nhsuk-list-panel__link', className)
  }, rest)));
};
var ListPanel = function ListPanel(_ref4) {
  var className = _ref4.className,
    children = _ref4.children,
    rest = _objectWithoutProperties(_ref4, _excluded4);
  return /*#__PURE__*/_react["default"].createElement("ol", _extends({
    className: (0, _classnames["default"])('nhsuk-list', className)
  }, rest), children);
};
ListPanel.LinkItem = PanelLinkItem;
ListPanel.Item = PanelItem;
ListPanel.Panel = Panel;
var _default = ListPanel;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,